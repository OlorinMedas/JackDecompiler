<class>
	<keyword> class </keyword>
	<define_class> Output </define_class>
	<symbol> { </symbol>
		<classVarDec>
			<keyword> static </keyword>
			<keyword> type </keyword>
			<define_static_variable_0> static_0 </define_static_variable_0>
			<symbol> , </symbol>
			<define_static_variable_1> static_1 </define_static_variable_1>
			<symbol> , </symbol>
			<define_static_variable_2> static_2 </define_static_variable_2>
			<symbol> , </symbol>
			<define_static_variable_3> static_3 </define_static_variable_3>
			<symbol> , </symbol>
			<define_static_variable_4> static_4 </define_static_variable_4>
			<symbol> , </symbol>
			<define_static_variable_5> static_5 </define_static_variable_5>
			<symbol> , </symbol>
			<define_static_variable_6> static_6 </define_static_variable_6>
			<symbol> ; </symbol>
		</classVarDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> init </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<statements>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_4> static_4 </refer_static_variable_4>
						<symbol> = </symbol>
						<expression>
							<term>
								<integerConstant> 16384 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_2> static_2 </refer_static_variable_2>
						<symbol> = </symbol>
						<expression>
							<term>
								<keywordConstant> true </keywordConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_1> static_1 </refer_static_variable_1>
						<symbol> = </symbol>
						<expression>
							<term>
								<integerConstant> 32 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_0> static_0 </refer_static_variable_0>
						<symbol> = </symbol>
						<expression>
							<term>
								<integerConstant> 0 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_3> static_3 </refer_static_variable_3>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_class> String </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> new </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant> 6 </integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> initMap </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>  </expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> createShiftedMap </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>  </expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> initMap </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<statements>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_5> static_5 </refer_static_variable_5>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_class> Array </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> new </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant> 127 </integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 32 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 33 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 34 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 20 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 18 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 18 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 18 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 18 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 18 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 18 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 36 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 37 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 49 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 38 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 39 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 40 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 41 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 42 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 43 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 44 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 45 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 46 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 47 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 32 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 49 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 14 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 50 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 52 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 16 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 26 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 25 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 60 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 53 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 55 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 49 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 56 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 57 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 62 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 14 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 58 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 59 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 60 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 61 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 62 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 64 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 59 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 59 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 59 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 65 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 66 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 67 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 68 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 69 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 11 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 11 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 70 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 11 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 11 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 71 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 59 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 44 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 72 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 73 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 74 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 60 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 14 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 75 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 76 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 77 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 33 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 78 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 55 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 55 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 59 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 59 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 79 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 80 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 81 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 59 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 82 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 83 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 84 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 45 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 85 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 86 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 87 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 18 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 88 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 89 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 90 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 49 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 35 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 91 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 92 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 32 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 93 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 94 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 8 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 95 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 96 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 97 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 14 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 98 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 99 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 100 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 60 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 101 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 102 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 38 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 103 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 62 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 104 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 55 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 105 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 14 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 106 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 56 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 107 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 108 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 14 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 109 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 29 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 43 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 43 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 43 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 43 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 110 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 29 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 111 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 112 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 31 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 113 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 62 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 114 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 29 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 55 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 3 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 7 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 115 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 116 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 4 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 28 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 117 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 54 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 118 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 119 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 18 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 120 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 30 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 121 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 62 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 48 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 24 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 15 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 122 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 27 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 6 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 51 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 63 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 123 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 56 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 7 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 56 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 124 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 125 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 7 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 56 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 12 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 7 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> create </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 126 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 38 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 45 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 25 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<integerConstant> 0 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> create </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
				<keyword> int </keyword>
				<define_argument_variable_0> argument_0 </define_argument_variable_0>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_1> argument_1 </define_argument_variable_1>
				<symbol> , </symbol>
				<refer_class> String </refer_class>
				<define_argument_variable_2> argument_2 </define_argument_variable_2>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_3> argument_3 </define_argument_variable_3>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_4> argument_4 </define_argument_variable_4>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_5> argument_5 </define_argument_variable_5>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_6> argument_6 </define_argument_variable_6>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_7> argument_7 </define_argument_variable_7>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_8> argument_8 </define_argument_variable_8>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_9> argument_9 </define_argument_variable_9>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_10> argument_10 </define_argument_variable_10>
				<symbol> , </symbol>
				<refer_class> Array </refer_class>
				<define_argument_variable_11> argument_11 </define_argument_variable_11>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<varDec>
					<keyword> var </keyword>
					<keyword> type </keyword>
					<define_local_variable_0> local_0 </define_local_variable_0>
					<symbol> ; </symbol>
				</varDec>
				<statements>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_class> Array </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> new </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant> 11 </integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_5> static_5 </refer_static_variable_5>
						<symbol> [ </symbol>
						<expression>
							<term>
								<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_local_variable_0> local_0 </refer_local_variable_0>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 0 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_1> argument_1 </refer_argument_variable_1>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 1 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_2> argument_2 </refer_argument_variable_2>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 2 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_3> argument_3 </refer_argument_variable_3>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 3 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_4> argument_4 </refer_argument_variable_4>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 4 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_5> argument_5 </refer_argument_variable_5>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 5 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_6> argument_6 </refer_argument_variable_6>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 6 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_7> argument_7 </refer_argument_variable_7>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 7 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_8> argument_8 </refer_argument_variable_8>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 8 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_9> argument_9 </refer_argument_variable_9>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 9 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_10> argument_10 </refer_argument_variable_10>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> [ </symbol>
						<expression>
							<term>
								<integerConstant> 10 </integerConstant>
							</term>
						</expression>
						<symbol> ] </symbol>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_11> argument_11 </refer_argument_variable_11>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> createShiftedMap </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<varDec>
					<keyword> var </keyword>
					<keyword> type </keyword>
					<define_local_variable_0> local_0 </define_local_variable_0>
					<symbol> , </symbol>
					<define_local_variable_1> local_1 </define_local_variable_1>
					<symbol> , </symbol>
					<define_local_variable_2> local_2 </define_local_variable_2>
					<symbol> , </symbol>
					<define_local_variable_3> local_3 </define_local_variable_3>
					<symbol> ; </symbol>
				</varDec>
				<statements>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_6> static_6 </refer_static_variable_6>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_class> Array </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> new </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant> 127 </integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_2> local_2 </refer_local_variable_2>
						<symbol> = </symbol>
						<expression>
							<term>
								<integerConstant> 0 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<whileStatement>
						<keyword> while </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<refer_local_variable_2> local_2 </refer_local_variable_2>
							</term>
							<symbol> &lt; </symbol>
							<term>
								<integerConstant> 127 </integerConstant>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<letStatement>
								<keyword> let </keyword>
								<refer_local_variable_0> local_0 </refer_local_variable_0>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_static_variable_5> static_5 </refer_static_variable_5>
										<symbol> [ </symbol>
										<expression>
											<term>
												<refer_local_variable_2> local_2 </refer_local_variable_2>
											</term>
										</expression>
										<symbol> ] </symbol>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
							<letStatement>
								<keyword> let </keyword>
								<refer_local_variable_1> local_1 </refer_local_variable_1>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_class> Array </refer_class>
										<symbol> . </symbol>
										<refer_subroutine> new </refer_subroutine>
										<symbol> ( </symbol>
										<expressionList>
											<expression>
												<term>
													<integerConstant> 11 </integerConstant>
												</term>
											</expression>
										</expressionList>
										<symbol> ) </symbol>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
							<letStatement>
								<keyword> let </keyword>
								<refer_static_variable_6> static_6 </refer_static_variable_6>
								<symbol> [ </symbol>
								<expression>
									<term>
										<refer_local_variable_2> local_2 </refer_local_variable_2>
									</term>
								</expression>
								<symbol> ] </symbol>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_local_variable_1> local_1 </refer_local_variable_1>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
							<letStatement>
								<keyword> let </keyword>
								<refer_local_variable_3> local_3 </refer_local_variable_3>
								<symbol> = </symbol>
								<expression>
									<term>
										<integerConstant> 0 </integerConstant>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
							<whileStatement>
								<keyword> while </keyword>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_local_variable_3> local_3 </refer_local_variable_3>
									</term>
									<symbol> &lt; </symbol>
									<term>
										<integerConstant> 11 </integerConstant>
									</term>
								</expression>
								<symbol> ) </symbol>
								<symbol> { </symbol>
								<statements>
									<letStatement>
										<keyword> let </keyword>
										<refer_local_variable_1> local_1 </refer_local_variable_1>
										<symbol> [ </symbol>
										<expression>
											<term>
												<refer_local_variable_3> local_3 </refer_local_variable_3>
											</term>
										</expression>
										<symbol> ] </symbol>
										<symbol> = </symbol>
										<expression>
											<term>
												<refer_local_variable_0> local_0 </refer_local_variable_0>
												<symbol> [ </symbol>
												<expression>
													<term>
														<refer_local_variable_3> local_3 </refer_local_variable_3>
													</term>
												</expression>
												<symbol> ] </symbol>
											</term>
											<symbol> * </symbol>
											<term>
												<integerConstant> 256 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
									<letStatement>
										<keyword> let </keyword>
										<refer_local_variable_3> local_3 </refer_local_variable_3>
										<symbol> = </symbol>
										<expression>
											<term>
												<refer_local_variable_3> local_3 </refer_local_variable_3>
											</term>
											<symbol> + </symbol>
											<term>
												<integerConstant> 1 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
								</statements>
								<symbol> } </symbol>
							</whileStatement>
							<ifStatement>
								<keyword> if </keyword>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_local_variable_2> local_2 </refer_local_variable_2>
									</term>
									<symbol> = </symbol>
									<term>
										<integerConstant> 0 </integerConstant>
									</term>
								</expression>
								<symbol> ) </symbol>
								<symbol> { </symbol>
								<statements>
									<letStatement>
										<keyword> let </keyword>
										<refer_local_variable_2> local_2 </refer_local_variable_2>
										<symbol> = </symbol>
										<expression>
											<term>
												<integerConstant> 32 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
								</statements>
								<symbol> } </symbol>
								<keyword> else </keyword>
								<symbol> { </symbol>
								<statements>
									<letStatement>
										<keyword> let </keyword>
										<refer_local_variable_2> local_2 </refer_local_variable_2>
										<symbol> = </symbol>
										<expression>
											<term>
												<refer_local_variable_2> local_2 </refer_local_variable_2>
											</term>
											<symbol> + </symbol>
											<term>
												<integerConstant> 1 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
								</statements>
								<symbol> } </symbol>
							</ifStatement>
						</statements>
						<symbol> } </symbol>
					</whileStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> int </keyword>
			<define_subroutine> getMap </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
				<keyword> int </keyword>
				<define_argument_variable_0> argument_0 </define_argument_variable_0>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<varDec>
					<keyword> var </keyword>
					<keyword> type </keyword>
					<define_local_variable_0> local_0 </define_local_variable_0>
					<symbol> ; </symbol>
				</varDec>
				<statements>
					<ifStatement>
						<keyword> if </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
									</term>
									<symbol> &lt; </symbol>
									<term>
										<integerConstant> 32 </integerConstant>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
							<symbol> | </symbol>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
									</term>
									<symbol> &gt; </symbol>
									<term>
										<integerConstant> 126 </integerConstant>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<letStatement>
								<keyword> let </keyword>
								<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
								<symbol> = </symbol>
								<expression>
									<term>
										<integerConstant> 0 </integerConstant>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
						</statements>
						<symbol> } </symbol>
					</ifStatement>
					<ifStatement>
						<keyword> if </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<refer_static_variable_2> static_2 </refer_static_variable_2>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<letStatement>
								<keyword> let </keyword>
								<refer_local_variable_0> local_0 </refer_local_variable_0>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_static_variable_5> static_5 </refer_static_variable_5>
										<symbol> [ </symbol>
										<expression>
											<term>
												<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
											</term>
										</expression>
										<symbol> ] </symbol>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
						</statements>
						<symbol> } </symbol>
						<keyword> else </keyword>
						<symbol> { </symbol>
						<statements>
							<letStatement>
								<keyword> let </keyword>
								<refer_local_variable_0> local_0 </refer_local_variable_0>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_static_variable_6> static_6 </refer_static_variable_6>
										<symbol> [ </symbol>
										<expression>
											<term>
												<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
											</term>
										</expression>
										<symbol> ] </symbol>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
						</statements>
						<symbol> } </symbol>
					</ifStatement>
					<returnStatement>
						<keyword> return </keyword>
						<expression>
							<term>
								<refer_local_variable_0> local_0 </refer_local_variable_0>
							</term>
						</expression>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> drawChar </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
				<keyword> int </keyword>
				<define_argument_variable_0> argument_0 </define_argument_variable_0>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<varDec>
					<keyword> var </keyword>
					<keyword> type </keyword>
					<define_local_variable_0> local_0 </define_local_variable_0>
					<symbol> , </symbol>
					<define_local_variable_1> local_1 </define_local_variable_1>
					<symbol> , </symbol>
					<define_local_variable_2> local_2 </define_local_variable_2>
					<symbol> , </symbol>
					<define_local_variable_3> local_3 </define_local_variable_3>
					<symbol> ; </symbol>
				</varDec>
				<statements>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_2> local_2 </refer_local_variable_2>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_class> Output </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> getMap </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_0> local_0 </refer_local_variable_0>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_static_variable_1> static_1 </refer_static_variable_1>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<whileStatement>
						<keyword> while </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<refer_local_variable_1> local_1 </refer_local_variable_1>
							</term>
							<symbol> &lt; </symbol>
							<term>
								<integerConstant> 11 </integerConstant>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<ifStatement>
								<keyword> if </keyword>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_static_variable_2> static_2 </refer_static_variable_2>
									</term>
								</expression>
								<symbol> ) </symbol>
								<symbol> { </symbol>
								<statements>
									<letStatement>
										<keyword> let </keyword>
										<refer_local_variable_3> local_3 </refer_local_variable_3>
										<symbol> = </symbol>
										<expression>
											<term>
												<refer_static_variable_4> static_4 </refer_static_variable_4>
												<symbol> [ </symbol>
												<expression>
													<term>
														<refer_local_variable_0> local_0 </refer_local_variable_0>
													</term>
												</expression>
												<symbol> ] </symbol>
											</term>
											<symbol> &amp; </symbol>
											<term>
												<symbol> - </symbol>
												<term>
													<integerConstant> 256 </integerConstant>
												</term>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
								</statements>
								<symbol> } </symbol>
								<keyword> else </keyword>
								<symbol> { </symbol>
								<statements>
									<letStatement>
										<keyword> let </keyword>
										<refer_local_variable_3> local_3 </refer_local_variable_3>
										<symbol> = </symbol>
										<expression>
											<term>
												<refer_static_variable_4> static_4 </refer_static_variable_4>
												<symbol> [ </symbol>
												<expression>
													<term>
														<refer_local_variable_0> local_0 </refer_local_variable_0>
													</term>
												</expression>
												<symbol> ] </symbol>
											</term>
											<symbol> &amp; </symbol>
											<term>
												<integerConstant> 255 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
								</statements>
								<symbol> } </symbol>
							</ifStatement>
							<letStatement>
								<keyword> let </keyword>
								<refer_static_variable_4> static_4 </refer_static_variable_4>
								<symbol> [ </symbol>
								<expression>
									<term>
										<refer_local_variable_0> local_0 </refer_local_variable_0>
									</term>
								</expression>
								<symbol> ] </symbol>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_local_variable_2> local_2 </refer_local_variable_2>
										<symbol> [ </symbol>
										<expression>
											<term>
												<refer_local_variable_1> local_1 </refer_local_variable_1>
											</term>
										</expression>
										<symbol> ] </symbol>
									</term>
									<symbol> | </symbol>
									<term>
										<refer_local_variable_3> local_3 </refer_local_variable_3>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
							<letStatement>
								<keyword> let </keyword>
								<refer_local_variable_0> local_0 </refer_local_variable_0>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_local_variable_0> local_0 </refer_local_variable_0>
									</term>
									<symbol> + </symbol>
									<term>
										<integerConstant> 32 </integerConstant>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
							<letStatement>
								<keyword> let </keyword>
								<refer_local_variable_1> local_1 </refer_local_variable_1>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_local_variable_1> local_1 </refer_local_variable_1>
									</term>
									<symbol> + </symbol>
									<term>
										<integerConstant> 1 </integerConstant>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
						</statements>
						<symbol> } </symbol>
					</whileStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> moveCursor </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
				<keyword> int </keyword>
				<define_argument_variable_0> argument_0 </define_argument_variable_0>
				<symbol> , </symbol>
				<keyword> int </keyword>
				<define_argument_variable_1> argument_1 </define_argument_variable_1>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<statements>
					<ifStatement>
						<keyword> if </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<symbol> ( </symbol>
										<expression>
											<term>
												<symbol> ( </symbol>
												<expression>
													<term>
														<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
													</term>
													<symbol> &lt; </symbol>
													<term>
														<integerConstant> 0 </integerConstant>
													</term>
												</expression>
												<symbol> ) </symbol>
											</term>
											<symbol> | </symbol>
											<term>
												<symbol> ( </symbol>
												<expression>
													<term>
														<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
													</term>
													<symbol> &gt; </symbol>
													<term>
														<integerConstant> 22 </integerConstant>
													</term>
												</expression>
												<symbol> ) </symbol>
											</term>
										</expression>
										<symbol> ) </symbol>
									</term>
									<symbol> | </symbol>
									<term>
										<symbol> ( </symbol>
										<expression>
											<term>
												<refer_argument_variable_1> argument_1 </refer_argument_variable_1>
											</term>
											<symbol> &lt; </symbol>
											<term>
												<integerConstant> 0 </integerConstant>
											</term>
										</expression>
										<symbol> ) </symbol>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
							<symbol> | </symbol>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_argument_variable_1> argument_1 </refer_argument_variable_1>
									</term>
									<symbol> &gt; </symbol>
									<term>
										<integerConstant> 63 </integerConstant>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<doStatement>
								<keyword> do </keyword>
								<refer_class> Sys </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> error </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant> 20 </integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
								<symbol> ; </symbol>
							</doStatement>
						</statements>
						<symbol> } </symbol>
					</ifStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_0> static_0 </refer_static_variable_0>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_1> argument_1 </refer_argument_variable_1>
							</term>
							<symbol> / </symbol>
							<term>
								<integerConstant> 2 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_1> static_1 </refer_static_variable_1>
						<symbol> = </symbol>
						<expression>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<integerConstant> 32 </integerConstant>
									</term>
									<symbol> + </symbol>
									<term>
										<symbol> ( </symbol>
										<expression>
											<term>
												<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
											</term>
											<symbol> * </symbol>
											<term>
												<integerConstant> 352 </integerConstant>
											</term>
										</expression>
										<symbol> ) </symbol>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
							<symbol> + </symbol>
							<term>
								<refer_static_variable_0> static_0 </refer_static_variable_0>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_2> static_2 </refer_static_variable_2>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_argument_variable_1> argument_1 </refer_argument_variable_1>
							</term>
							<symbol> = </symbol>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_static_variable_0> static_0 </refer_static_variable_0>
									</term>
									<symbol> * </symbol>
									<term>
										<integerConstant> 2 </integerConstant>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> drawChar </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 32 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> printChar </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
				<keyword> char </keyword>
				<define_argument_variable_0> argument_0 </define_argument_variable_0>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<statements>
					<ifStatement>
						<keyword> if </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
							</term>
							<symbol> = </symbol>
							<term>
								<refer_class> String </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> newLine </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>  </expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<doStatement>
								<keyword> do </keyword>
								<refer_class> Output </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> println </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>  </expressionList>
								<symbol> ) </symbol>
								<symbol> ; </symbol>
							</doStatement>
						</statements>
						<symbol> } </symbol>
						<keyword> else </keyword>
						<symbol> { </symbol>
						<statements>
							<ifStatement>
								<keyword> if </keyword>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
									</term>
									<symbol> = </symbol>
									<term>
										<refer_class> String </refer_class>
										<symbol> . </symbol>
										<refer_subroutine> backSpace </refer_subroutine>
										<symbol> ( </symbol>
										<expressionList>  </expressionList>
										<symbol> ) </symbol>
									</term>
								</expression>
								<symbol> ) </symbol>
								<symbol> { </symbol>
								<statements>
									<doStatement>
										<keyword> do </keyword>
										<refer_class> Output </refer_class>
										<symbol> . </symbol>
										<refer_subroutine> backSpace </refer_subroutine>
										<symbol> ( </symbol>
										<expressionList>  </expressionList>
										<symbol> ) </symbol>
										<symbol> ; </symbol>
									</doStatement>
								</statements>
								<symbol> } </symbol>
								<keyword> else </keyword>
								<symbol> { </symbol>
								<statements>
									<doStatement>
										<keyword> do </keyword>
										<refer_class> Output </refer_class>
										<symbol> . </symbol>
										<refer_subroutine> drawChar </refer_subroutine>
										<symbol> ( </symbol>
										<expressionList>
											<expression>
												<term>
													<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
												</term>
											</expression>
										</expressionList>
										<symbol> ) </symbol>
										<symbol> ; </symbol>
									</doStatement>
									<ifStatement>
										<keyword> if </keyword>
										<symbol> ( </symbol>
										<expression>
											<term>
												<symbol> ~ </symbol>
												<term>
													<refer_static_variable_2> static_2 </refer_static_variable_2>
												</term>
											</term>
										</expression>
										<symbol> ) </symbol>
										<symbol> { </symbol>
										<statements>
											<letStatement>
												<keyword> let </keyword>
												<refer_static_variable_0> static_0 </refer_static_variable_0>
												<symbol> = </symbol>
												<expression>
													<term>
														<refer_static_variable_0> static_0 </refer_static_variable_0>
													</term>
													<symbol> + </symbol>
													<term>
														<integerConstant> 1 </integerConstant>
													</term>
												</expression>
												<symbol> ; </symbol>
											</letStatement>
											<letStatement>
												<keyword> let </keyword>
												<refer_static_variable_1> static_1 </refer_static_variable_1>
												<symbol> = </symbol>
												<expression>
													<term>
														<refer_static_variable_1> static_1 </refer_static_variable_1>
													</term>
													<symbol> + </symbol>
													<term>
														<integerConstant> 1 </integerConstant>
													</term>
												</expression>
												<symbol> ; </symbol>
											</letStatement>
										</statements>
										<symbol> } </symbol>
									</ifStatement>
									<ifStatement>
										<keyword> if </keyword>
										<symbol> ( </symbol>
										<expression>
											<term>
												<refer_static_variable_0> static_0 </refer_static_variable_0>
											</term>
											<symbol> = </symbol>
											<term>
												<integerConstant> 32 </integerConstant>
											</term>
										</expression>
										<symbol> ) </symbol>
										<symbol> { </symbol>
										<statements>
											<doStatement>
												<keyword> do </keyword>
												<refer_class> Output </refer_class>
												<symbol> . </symbol>
												<refer_subroutine> println </refer_subroutine>
												<symbol> ( </symbol>
												<expressionList>  </expressionList>
												<symbol> ) </symbol>
												<symbol> ; </symbol>
											</doStatement>
										</statements>
										<symbol> } </symbol>
										<keyword> else </keyword>
										<symbol> { </symbol>
										<statements>
											<letStatement>
												<keyword> let </keyword>
												<refer_static_variable_2> static_2 </refer_static_variable_2>
												<symbol> = </symbol>
												<expression>
													<term>
														<symbol> ~ </symbol>
														<term>
															<refer_static_variable_2> static_2 </refer_static_variable_2>
														</term>
													</term>
												</expression>
												<symbol> ; </symbol>
											</letStatement>
										</statements>
										<symbol> } </symbol>
									</ifStatement>
								</statements>
								<symbol> } </symbol>
							</ifStatement>
						</statements>
						<symbol> } </symbol>
					</ifStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> printString </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
				<refer_class> String </refer_class>
				<define_argument_variable_0> argument_0 </define_argument_variable_0>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<varDec>
					<keyword> var </keyword>
					<keyword> type </keyword>
					<define_local_variable_0> local_0 </define_local_variable_0>
					<symbol> , </symbol>
					<define_local_variable_1> local_1 </define_local_variable_1>
					<symbol> ; </symbol>
				</varDec>
				<statements>
					<letStatement>
						<keyword> let </keyword>
						<refer_local_variable_1> local_1 </refer_local_variable_1>
						<symbol> = </symbol>
						<expression>
							<term>
								<refer_class> String </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> length </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<whileStatement>
						<keyword> while </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<refer_local_variable_0> local_0 </refer_local_variable_0>
							</term>
							<symbol> &lt; </symbol>
							<term>
								<refer_local_variable_1> local_1 </refer_local_variable_1>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<doStatement>
								<keyword> do </keyword>
								<refer_class> Output </refer_class>
								<symbol> . </symbol>
								<refer_subroutine> printChar </refer_subroutine>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<refer_class> String </refer_class>
											<symbol> . </symbol>
											<refer_subroutine> charAt </refer_subroutine>
											<symbol> ( </symbol>
											<expressionList>
												<expression>
													<term>
														<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
													</term>
												</expression>
												<symbol> , </symbol>
												<expression>
													<term>
														<refer_local_variable_0> local_0 </refer_local_variable_0>
													</term>
												</expression>
											</expressionList>
											<symbol> ) </symbol>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
								<symbol> ; </symbol>
							</doStatement>
							<letStatement>
								<keyword> let </keyword>
								<refer_local_variable_0> local_0 </refer_local_variable_0>
								<symbol> = </symbol>
								<expression>
									<term>
										<refer_local_variable_0> local_0 </refer_local_variable_0>
									</term>
									<symbol> + </symbol>
									<term>
										<integerConstant> 1 </integerConstant>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
						</statements>
						<symbol> } </symbol>
					</whileStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> printInt </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
				<keyword> int </keyword>
				<define_argument_variable_0> argument_0 </define_argument_variable_0>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<statements>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> String </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> setInt </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<refer_static_variable_3> static_3 </refer_static_variable_3>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<refer_argument_variable_0> argument_0 </refer_argument_variable_0>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> printString </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<refer_static_variable_3> static_3 </refer_static_variable_3>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> println </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<statements>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_1> static_1 </refer_static_variable_1>
						<symbol> = </symbol>
						<expression>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_static_variable_1> static_1 </refer_static_variable_1>
									</term>
									<symbol> + </symbol>
									<term>
										<integerConstant> 352 </integerConstant>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
							<symbol> - </symbol>
							<term>
								<refer_static_variable_0> static_0 </refer_static_variable_0>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_0> static_0 </refer_static_variable_0>
						<symbol> = </symbol>
						<expression>
							<term>
								<integerConstant> 0 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<letStatement>
						<keyword> let </keyword>
						<refer_static_variable_2> static_2 </refer_static_variable_2>
						<symbol> = </symbol>
						<expression>
							<term>
								<keywordConstant> true </keywordConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<ifStatement>
						<keyword> if </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<refer_static_variable_1> static_1 </refer_static_variable_1>
							</term>
							<symbol> = </symbol>
							<term>
								<integerConstant> 8128 </integerConstant>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<letStatement>
								<keyword> let </keyword>
								<refer_static_variable_1> static_1 </refer_static_variable_1>
								<symbol> = </symbol>
								<expression>
									<term>
										<integerConstant> 32 </integerConstant>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
						</statements>
						<symbol> } </symbol>
					</ifStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
		<subroutineDec>
			<keyword> function </keyword>
			<keyword> void </keyword>
			<define_subroutine> backSpace </define_subroutine>
			<symbol> ( </symbol>
			<parameterList>
			</parameterList>
			<symbol> ) </symbol>
			<subroutineBody>
				<symbol> { </symbol>
				<statements>
					<ifStatement>
						<keyword> if </keyword>
						<symbol> ( </symbol>
						<expression>
							<term>
								<refer_static_variable_2> static_2 </refer_static_variable_2>
							</term>
						</expression>
						<symbol> ) </symbol>
						<symbol> { </symbol>
						<statements>
							<ifStatement>
								<keyword> if </keyword>
								<symbol> ( </symbol>
								<expression>
									<term>
										<refer_static_variable_0> static_0 </refer_static_variable_0>
									</term>
									<symbol> &gt; </symbol>
									<term>
										<integerConstant> 0 </integerConstant>
									</term>
								</expression>
								<symbol> ) </symbol>
								<symbol> { </symbol>
								<statements>
									<letStatement>
										<keyword> let </keyword>
										<refer_static_variable_0> static_0 </refer_static_variable_0>
										<symbol> = </symbol>
										<expression>
											<term>
												<refer_static_variable_0> static_0 </refer_static_variable_0>
											</term>
											<symbol> - </symbol>
											<term>
												<integerConstant> 1 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
									<letStatement>
										<keyword> let </keyword>
										<refer_static_variable_1> static_1 </refer_static_variable_1>
										<symbol> = </symbol>
										<expression>
											<term>
												<refer_static_variable_1> static_1 </refer_static_variable_1>
											</term>
											<symbol> - </symbol>
											<term>
												<integerConstant> 1 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
								</statements>
								<symbol> } </symbol>
								<keyword> else </keyword>
								<symbol> { </symbol>
								<statements>
									<letStatement>
										<keyword> let </keyword>
										<refer_static_variable_0> static_0 </refer_static_variable_0>
										<symbol> = </symbol>
										<expression>
											<term>
												<integerConstant> 31 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
									<ifStatement>
										<keyword> if </keyword>
										<symbol> ( </symbol>
										<expression>
											<term>
												<refer_static_variable_1> static_1 </refer_static_variable_1>
											</term>
											<symbol> = </symbol>
											<term>
												<integerConstant> 32 </integerConstant>
											</term>
										</expression>
										<symbol> ) </symbol>
										<symbol> { </symbol>
										<statements>
											<letStatement>
												<keyword> let </keyword>
												<refer_static_variable_1> static_1 </refer_static_variable_1>
												<symbol> = </symbol>
												<expression>
													<term>
														<integerConstant> 8128 </integerConstant>
													</term>
												</expression>
												<symbol> ; </symbol>
											</letStatement>
										</statements>
										<symbol> } </symbol>
									</ifStatement>
									<letStatement>
										<keyword> let </keyword>
										<refer_static_variable_1> static_1 </refer_static_variable_1>
										<symbol> = </symbol>
										<expression>
											<term>
												<refer_static_variable_1> static_1 </refer_static_variable_1>
											</term>
											<symbol> - </symbol>
											<term>
												<integerConstant> 321 </integerConstant>
											</term>
										</expression>
										<symbol> ; </symbol>
									</letStatement>
								</statements>
								<symbol> } </symbol>
							</ifStatement>
							<letStatement>
								<keyword> let </keyword>
								<refer_static_variable_2> static_2 </refer_static_variable_2>
								<symbol> = </symbol>
								<expression>
									<term>
										<integerConstant> 0 </integerConstant>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
						</statements>
						<symbol> } </symbol>
						<keyword> else </keyword>
						<symbol> { </symbol>
						<statements>
							<letStatement>
								<keyword> let </keyword>
								<refer_static_variable_2> static_2 </refer_static_variable_2>
								<symbol> = </symbol>
								<expression>
									<term>
										<keywordConstant> true </keywordConstant>
									</term>
								</expression>
								<symbol> ; </symbol>
							</letStatement>
						</statements>
						<symbol> } </symbol>
					</ifStatement>
					<doStatement>
						<keyword> do </keyword>
						<refer_class> Output </refer_class>
						<symbol> . </symbol>
						<refer_subroutine> drawChar </refer_subroutine>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<integerConstant> 32 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<returnStatement>
						<keyword> return </keyword>
						<symbol> ; </symbol>
					</returnStatement>
				</statements>
				<symbol> } </symbol>
			</subroutineBody>
		</subroutineDec>
	</class>
