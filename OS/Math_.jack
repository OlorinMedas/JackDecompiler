class Math {
	static int static_0, static_1;
	
	function void init () {
		local int local_0;
		
		let static_1 = Array.new(16);
		let static_0 = Array.new(16);
		let static_0[0] = 1;
		while (local_0 < 15) {
			let local_0 = local_0 + 1;
			let static_0[local_0] = static_0[local_0 - 1] + static_0[local_0 - 1];
		}
		return;
	}
	
	function int abs (int argument_0) {
		if (argument_0 < 0) {
			let argument_0 = -argument_0;
		}
		return argument_0;
	}
	
	function int multiply (int argument_0, int argument_1) {
		local int local_0, local_1, local_2, local_3;
		local boolean local_4;
		
		let local_4 = ((argument_0 < 0) & (argument_1 > 0)) | ((argument_0 > 0) & (argument_1 < 0));
		let argument_0 = Math.abs(argument_0);
		let argument_1 = Math.abs(argument_1);
		if (argument_0 < argument_1) {
			let local_1 = argument_0;
			let argument_0 = argument_1;
			let argument_1 = local_1;
		}
		while ((local_2 - 1) < (argument_1 - 1)) {
			if (~((static_0[local_3] & argument_1) = 0)) {
				let local_0 = local_0 + argument_0;
				let local_2 = local_2 + static_0[local_3];
			}
			let argument_0 = argument_0 + argument_0;
			let local_3 = local_3 + 1;
		}
		if (local_4) {
			let local_0 = -local_0;
		}
		return local_0;
	}
	
	function int divide (int argument_0, int argument_1) {
		local int local_0, local_1, local_2, local_3;
		
		if (argument_1 = 0) {
			do Sys.error(3);
		}
		let local_2 = ((argument_0 < 0) & (argument_1 > 0)) | ((argument_0 > 0) & (argument_1 < 0));
		let static_1[0] = Math.abs(argument_1);
		let argument_0 = Math.abs(argument_0);
		while ((local_0 < 15) & ~local_3) {
			let local_3 = (32767 - (static_1[local_0] - 1)) < (static_1[local_0] - 1);
			if (~local_3) {
				let static_1[local_0 + 1] = static_1[local_0] + static_1[local_0];
				let local_3 = (static_1[local_0 + 1] - 1) > (argument_0 - 1);
				if (~local_3) {
					let local_0 = local_0 + 1;
				}
			}
		}
		while (local_0 > -1) {
			if (~((static_1[local_0] - 1) > (argument_0 - 1))) {
				let local_1 = local_1 + static_0[local_0];
				let argument_0 = argument_0 - static_1[local_0];
			}
			let local_0 = local_0 - 1;
		}
		if (local_2) {
			let local_1 = -local_1;
		}
		return local_1;
	}
	
	function int sqrt (int argument_0) {
		local int local_0, local_1, local_2, local_3;
		
		if (argument_0 < 0) {
			do Sys.error(4);
		}
		let local_0 = 7;
		while (local_0 > -1) {
			let local_1 = local_3 + static_0[local_0];
			let local_2 = local_1 * local_1;
			if (~(local_2 > argument_0) & ~(local_2 < 0)) {
				let local_3 = local_1;
			}
			let local_0 = local_0 - 1;
		}
		return local_3;
	}
	
	function int max (int argument_0, int argument_1) {
		if (argument_0 > argument_1) {
			let argument_1 = argument_0;
		}
		return argument_1;
	}
	
	function int min (int argument_0, int argument_1) {
		if (argument_0 < argument_1) {
			let argument_1 = argument_0;
		}
		return argument_1;
	}
	
}
