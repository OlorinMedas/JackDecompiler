class String {
	field int field_0, field_1, field_2;
	
	constructor Screen new (int argument_0) {
		if (argument_0 < 0) {
			do Sys.error(14);
		}
		if (argument_0 > 0) {
			let field_1 = Array.new(argument_0);
		}
		let field_0 = argument_0;
		let field_2 = 0;
		return this;
	}
	
	method void dispose () {
		if (field_0 > 0) {
			do field_1.dispose();
		}
		do Memory.deAlloc(this);
		return;
	}
	
	method int length () {
		return field_2;
	}
	
	method int charAt (int argument_0) {
		if (((argument_1 < 0) | (argument_1 > field_2)) | (argument_1 = field_2)) {
			do Sys.error(15);
		}
		return field_1[argument_1];
	}
	
	method void setCharAt (int argument_0, char argument_1) {
		if (((argument_1 < 0) | (argument_1 > field_2)) | (argument_1 = field_2)) {
			do Sys.error(16);
		}
		let field_1[argument_1] = argument_2;
		return;
	}
	
	method String appendChar (char argument_0) {
		if (field_2 = field_0) {
			do Sys.error(17);
		}
		let field_1[field_2] = argument_1;
		let field_2 = field_2 + 1;
		return this;
	}
	
	method void eraseLastChar () {
		if (field_2 = 0) {
			do Sys.error(18);
		}
		let field_2 = field_2 - 1;
		return;
	}
	
	method int intValue () {
		local int local_0, local_1, local_2;
		local boolean local_3;
		local boolean local_4;
		
		if (field_2 = 0) {
			return 0;
		}
		let local_3 = true;
		if (field_1[0] = 45) {
			let local_4 = true;
			let local_0 = 1;
		}
		while ((local_0 < field_2) & local_3) {
			let local_2 = field_1[local_0] - 48;
			let local_3 = ~((local_2 < 0) | (local_2 > 9));
			if (local_3) {
				let local_1 = (local_1 * 10) + local_2;
				let local_0 = local_0 + 1;
			}
		}
		if (local_4) {
			let local_1 = -local_1;
		}
		return local_1;
	}
	
	method void setInt (int argument_0) {
		local int local_0, local_1;
		local Array local_2;
		local boolean local_3;
		
		if (field_0 = 0) {
			do Sys.error(19);
		}
		let local_2 = Array.new(6);
		if (argument_1 < 0) {
			let local_3 = true;
			let argument_1 = -argument_1;
		}
		let local_1 = argument_1;
		while (local_1 > 0) {
			let local_1 = argument_1 / 10;
			let local_2[local_0] = 48 + (argument_1 - (local_1 * 10));
			let local_0 = local_0 + 1;
			let argument_1 = local_1;
		}
		if (local_3) {
			let local_2[local_0] = 45;
			let local_0 = local_0 + 1;
		}
		if (field_0 < local_0) {
			do Sys.error(19);
		}
		if (local_0 = 0) {
			let field_1[0] = 48;
			let field_2 = 1;
		} else {
			let field_2 = 0;
			while (field_2 < local_0) {
				let field_1[field_2] = local_2[local_0 - (field_2 + 1)];
				let field_2 = field_2 + 1;
			}
		}
		do local_2.dispose();
		return;
	}
	
	function int newLine () {
		return 128;
	}
	
	function int backSpace () {
		return 129;
	}
	
	function int doubleQuote () {
		return 34;
	}
	
}
